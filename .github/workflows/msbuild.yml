name: MSBuild

on:
  push:
    # TODO: Remove release pipeline from this branches when this works
    branches: [ "main", "release-pipeline" ]
  pull_request:
    branches: [ "main" ]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release
  # BUILD_CONFIGURATION: Debug

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.1

    # Adapted from https://stackoverflow.com/a/42700738 and https://stackoverflow.com/a/1474968
    - name: Create DevEnv.targets and point it at the stripped and publicized assemblies
      run: |
        Copy-Item DevEnv.targets.example DevEnv.targets -Force
        $filePathToTask = (Resolve-Path "DevEnv.targets")
        $xml = New-Object XML
        $xml.Load($filePathToTask)
        $element = $xml.SelectSingleNode("//*[local-name()='WorldsAdriftGameDir']")
        $element.InnerText = (Resolve-Path "StrippedAndPublicizedAssemblies\")
        $xml.Save($filePathToTask)
        Get-Content $filePathToTask

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.SOLUTION_FILE_PATH}}

    # Normally this is done automatically because the WorldsAdriftReborn and WorldsAdriftRebornGameServer project reference the WorldsAdriftRebornCoreSdk project and is configured to do so
    # however for some reason this does not work inside the pipeline so we have to do this as a second action
    - name: Copy WorldsAdriftRebornCoreSdk to the output folders of the dependant projects (WorldsAdriftReborn, WorldsAdriftRebornGameServer)
      run: |
        Copy-Item -Path "x64\${{env.BUILD_CONFIGURATION}}\*" -Destination "StrippedAndPublicizedAssemblies\BepInEx\plugins\WorldsAdriftReborn" -Recurse
        Copy-Item -Path "x64\${{env.BUILD_CONFIGURATION}}\*" -Destination "WorldsAdriftRebornGameServer\bin\${{env.BUILD_CONFIGURATION}}\net6.0" -Recurse

    - name: Collect WorldsAdriftReborn, WorldsAdriftRebornGameServer and WorldsAdriftRebornGameServer into a single publish folder
      run: |
        New-Item "publish\WorldsAdriftReborn" -Type Directory
        Copy-Item -Path "StrippedAndPublicizedAssemblies\BepInEx\plugins\WorldsAdriftReborn\*" -Destination "publish\WorldsAdriftReborn" -Recurse -Force
        New-Item "publish\WorldsAdriftRebornGameServer" -Type Directory
        Copy-Item -Path "WorldsAdriftRebornGameServer\bin\${{env.BUILD_CONFIGURATION}}\net6.0\*" -Destination "publish\WorldsAdriftRebornGameServer" -Recurse -Force
        New-Item "publish\WorldsAdriftServer" -Type Directory
        Copy-Item -Path "WorldsAdriftServer\bin\${{env.BUILD_CONFIGURATION}}\net6.0\*" -Destination "publish\WorldsAdriftServer" -Recurse -Force
        Copy-Item -Path "README.md" -Destination "publish\"

    - name: Upload WorldsAdriftReborn Collection Artifact
      uses: actions/upload-artifact@v3
      with:
        name: WorldsAdriftReborn
        path: publish

    # - name: Upload WorldsAdriftReborn Artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: WorldsAdriftReborn
    #     path: StrippedAndPublicizedAssemblies\BepInEx\plugins\WorldsAdriftReborn

    # - name: Upload WorldsAdriftRebornGameServer Artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: WorldsAdriftRebornGameServer
    #     path: WorldsAdriftRebornGameServer\bin\${{env.BUILD_CONFIGURATION}}\net6.0
    
    # - name: Upload WorldsAdriftServer Artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: WorldsAdriftServer
    #     path: WorldsAdriftServer\bin\${{env.BUILD_CONFIGURATION}}\net6.0
