// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SendComponentInterest.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_SendComponentInterest_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_SendComponentInterest_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021008 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_SendComponentInterest_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_SendComponentInterest_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_SendComponentInterest_2eproto;
namespace WorldsAdriftRebornCoreSdk {
class InterestOverride;
struct InterestOverrideDefaultTypeInternal;
extern InterestOverrideDefaultTypeInternal _InterestOverride_default_instance_;
class SendComponentInterest;
struct SendComponentInterestDefaultTypeInternal;
extern SendComponentInterestDefaultTypeInternal _SendComponentInterest_default_instance_;
}  // namespace WorldsAdriftRebornCoreSdk
PROTOBUF_NAMESPACE_OPEN
template<> ::WorldsAdriftRebornCoreSdk::InterestOverride* Arena::CreateMaybeMessage<::WorldsAdriftRebornCoreSdk::InterestOverride>(Arena*);
template<> ::WorldsAdriftRebornCoreSdk::SendComponentInterest* Arena::CreateMaybeMessage<::WorldsAdriftRebornCoreSdk::SendComponentInterest>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace WorldsAdriftRebornCoreSdk {

// ===================================================================

class SendComponentInterest final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WorldsAdriftRebornCoreSdk.SendComponentInterest) */ {
 public:
  inline SendComponentInterest() : SendComponentInterest(nullptr) {}
  ~SendComponentInterest() override;
  explicit PROTOBUF_CONSTEXPR SendComponentInterest(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  SendComponentInterest(const SendComponentInterest& from);
  SendComponentInterest(SendComponentInterest&& from) noexcept
    : SendComponentInterest() {
    *this = ::std::move(from);
  }

  inline SendComponentInterest& operator=(const SendComponentInterest& from) {
    CopyFrom(from);
    return *this;
  }
  inline SendComponentInterest& operator=(SendComponentInterest&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const SendComponentInterest& default_instance() {
    return *internal_default_instance();
  }
  static inline const SendComponentInterest* internal_default_instance() {
    return reinterpret_cast<const SendComponentInterest*>(
               &_SendComponentInterest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SendComponentInterest& a, SendComponentInterest& b) {
    a.Swap(&b);
  }
  inline void Swap(SendComponentInterest* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(SendComponentInterest* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  SendComponentInterest* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<SendComponentInterest>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const SendComponentInterest& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const SendComponentInterest& from) {
    SendComponentInterest::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SendComponentInterest* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WorldsAdriftRebornCoreSdk.SendComponentInterest";
  }
  protected:
  explicit SendComponentInterest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentsFieldNumber = 2,
    kEntityIdFieldNumber = 1,
  };
  // repeated .WorldsAdriftRebornCoreSdk.InterestOverride Components = 2;
  int components_size() const;
  private:
  int _internal_components_size() const;
  public:
  void clear_components();
  ::WorldsAdriftRebornCoreSdk::InterestOverride* mutable_components(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorldsAdriftRebornCoreSdk::InterestOverride >*
      mutable_components();
  private:
  const ::WorldsAdriftRebornCoreSdk::InterestOverride& _internal_components(int index) const;
  ::WorldsAdriftRebornCoreSdk::InterestOverride* _internal_add_components();
  public:
  const ::WorldsAdriftRebornCoreSdk::InterestOverride& components(int index) const;
  ::WorldsAdriftRebornCoreSdk::InterestOverride* add_components();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorldsAdriftRebornCoreSdk::InterestOverride >&
      components() const;

  // optional int64 EntityId = 1;
  bool has_entityid() const;
  private:
  bool _internal_has_entityid() const;
  public:
  void clear_entityid();
  int64_t entityid() const;
  void set_entityid(int64_t value);
  private:
  int64_t _internal_entityid() const;
  void _internal_set_entityid(int64_t value);
  public:

  // @@protoc_insertion_point(class_scope:WorldsAdriftRebornCoreSdk.SendComponentInterest)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorldsAdriftRebornCoreSdk::InterestOverride > components_;
    int64_t entityid_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SendComponentInterest_2eproto;
};
// -------------------------------------------------------------------

class InterestOverride final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:WorldsAdriftRebornCoreSdk.InterestOverride) */ {
 public:
  inline InterestOverride() : InterestOverride(nullptr) {}
  ~InterestOverride() override;
  explicit PROTOBUF_CONSTEXPR InterestOverride(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  InterestOverride(const InterestOverride& from);
  InterestOverride(InterestOverride&& from) noexcept
    : InterestOverride() {
    *this = ::std::move(from);
  }

  inline InterestOverride& operator=(const InterestOverride& from) {
    CopyFrom(from);
    return *this;
  }
  inline InterestOverride& operator=(InterestOverride&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const InterestOverride& default_instance() {
    return *internal_default_instance();
  }
  static inline const InterestOverride* internal_default_instance() {
    return reinterpret_cast<const InterestOverride*>(
               &_InterestOverride_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(InterestOverride& a, InterestOverride& b) {
    a.Swap(&b);
  }
  inline void Swap(InterestOverride* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(InterestOverride* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  InterestOverride* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<InterestOverride>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const InterestOverride& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const InterestOverride& from) {
    InterestOverride::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(InterestOverride* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "WorldsAdriftRebornCoreSdk.InterestOverride";
  }
  protected:
  explicit InterestOverride(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kComponentIdFieldNumber = 1,
    kIsInterestedFieldNumber = 2,
  };
  // optional uint32 ComponentId = 1;
  bool has_componentid() const;
  private:
  bool _internal_has_componentid() const;
  public:
  void clear_componentid();
  uint32_t componentid() const;
  void set_componentid(uint32_t value);
  private:
  uint32_t _internal_componentid() const;
  void _internal_set_componentid(uint32_t value);
  public:

  // optional bool IsInterested = 2;
  bool has_isinterested() const;
  private:
  bool _internal_has_isinterested() const;
  public:
  void clear_isinterested();
  bool isinterested() const;
  void set_isinterested(bool value);
  private:
  bool _internal_isinterested() const;
  void _internal_set_isinterested(bool value);
  public:

  // @@protoc_insertion_point(class_scope:WorldsAdriftRebornCoreSdk.InterestOverride)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    uint32_t componentid_;
    bool isinterested_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_SendComponentInterest_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SendComponentInterest

// optional int64 EntityId = 1;
inline bool SendComponentInterest::_internal_has_entityid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SendComponentInterest::has_entityid() const {
  return _internal_has_entityid();
}
inline void SendComponentInterest::clear_entityid() {
  _impl_.entityid_ = int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline int64_t SendComponentInterest::_internal_entityid() const {
  return _impl_.entityid_;
}
inline int64_t SendComponentInterest::entityid() const {
  // @@protoc_insertion_point(field_get:WorldsAdriftRebornCoreSdk.SendComponentInterest.EntityId)
  return _internal_entityid();
}
inline void SendComponentInterest::_internal_set_entityid(int64_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.entityid_ = value;
}
inline void SendComponentInterest::set_entityid(int64_t value) {
  _internal_set_entityid(value);
  // @@protoc_insertion_point(field_set:WorldsAdriftRebornCoreSdk.SendComponentInterest.EntityId)
}

// repeated .WorldsAdriftRebornCoreSdk.InterestOverride Components = 2;
inline int SendComponentInterest::_internal_components_size() const {
  return _impl_.components_.size();
}
inline int SendComponentInterest::components_size() const {
  return _internal_components_size();
}
inline void SendComponentInterest::clear_components() {
  _impl_.components_.Clear();
}
inline ::WorldsAdriftRebornCoreSdk::InterestOverride* SendComponentInterest::mutable_components(int index) {
  // @@protoc_insertion_point(field_mutable:WorldsAdriftRebornCoreSdk.SendComponentInterest.Components)
  return _impl_.components_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorldsAdriftRebornCoreSdk::InterestOverride >*
SendComponentInterest::mutable_components() {
  // @@protoc_insertion_point(field_mutable_list:WorldsAdriftRebornCoreSdk.SendComponentInterest.Components)
  return &_impl_.components_;
}
inline const ::WorldsAdriftRebornCoreSdk::InterestOverride& SendComponentInterest::_internal_components(int index) const {
  return _impl_.components_.Get(index);
}
inline const ::WorldsAdriftRebornCoreSdk::InterestOverride& SendComponentInterest::components(int index) const {
  // @@protoc_insertion_point(field_get:WorldsAdriftRebornCoreSdk.SendComponentInterest.Components)
  return _internal_components(index);
}
inline ::WorldsAdriftRebornCoreSdk::InterestOverride* SendComponentInterest::_internal_add_components() {
  return _impl_.components_.Add();
}
inline ::WorldsAdriftRebornCoreSdk::InterestOverride* SendComponentInterest::add_components() {
  ::WorldsAdriftRebornCoreSdk::InterestOverride* _add = _internal_add_components();
  // @@protoc_insertion_point(field_add:WorldsAdriftRebornCoreSdk.SendComponentInterest.Components)
  return _add;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::WorldsAdriftRebornCoreSdk::InterestOverride >&
SendComponentInterest::components() const {
  // @@protoc_insertion_point(field_list:WorldsAdriftRebornCoreSdk.SendComponentInterest.Components)
  return _impl_.components_;
}

// -------------------------------------------------------------------

// InterestOverride

// optional uint32 ComponentId = 1;
inline bool InterestOverride::_internal_has_componentid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool InterestOverride::has_componentid() const {
  return _internal_has_componentid();
}
inline void InterestOverride::clear_componentid() {
  _impl_.componentid_ = 0u;
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline uint32_t InterestOverride::_internal_componentid() const {
  return _impl_.componentid_;
}
inline uint32_t InterestOverride::componentid() const {
  // @@protoc_insertion_point(field_get:WorldsAdriftRebornCoreSdk.InterestOverride.ComponentId)
  return _internal_componentid();
}
inline void InterestOverride::_internal_set_componentid(uint32_t value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.componentid_ = value;
}
inline void InterestOverride::set_componentid(uint32_t value) {
  _internal_set_componentid(value);
  // @@protoc_insertion_point(field_set:WorldsAdriftRebornCoreSdk.InterestOverride.ComponentId)
}

// optional bool IsInterested = 2;
inline bool InterestOverride::_internal_has_isinterested() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool InterestOverride::has_isinterested() const {
  return _internal_has_isinterested();
}
inline void InterestOverride::clear_isinterested() {
  _impl_.isinterested_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool InterestOverride::_internal_isinterested() const {
  return _impl_.isinterested_;
}
inline bool InterestOverride::isinterested() const {
  // @@protoc_insertion_point(field_get:WorldsAdriftRebornCoreSdk.InterestOverride.IsInterested)
  return _internal_isinterested();
}
inline void InterestOverride::_internal_set_isinterested(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.isinterested_ = value;
}
inline void InterestOverride::set_isinterested(bool value) {
  _internal_set_isinterested(value);
  // @@protoc_insertion_point(field_set:WorldsAdriftRebornCoreSdk.InterestOverride.IsInterested)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace WorldsAdriftRebornCoreSdk

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_SendComponentInterest_2eproto
